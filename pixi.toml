[project]
authors = ["Jack Myers <jack.myers@intel.com>"]
channels = ["https://software.repos.intel.com/python/conda/", "conda-forge"]
description = "Add a short description here"
name = "dpcpp"
# platforms = ["win-64", "linux-64"]
platforms = ["linux-64"]
version = "20.0.0"

# Common among all toolchains
[dependencies]
python = ">=3.12.5,<4"
cmake = ">=3.30.5,<4"
ninja = ">=1.12.1,<2"
git = ">=2.47.0,<3"
clang-tools = ">=18.1.8,<20"
intel-opencl-rt = ">=2024.2.1,<2025"
intel-fortran-rt = ">=2024.2.1,<2025"
ccache = ">=4.10.1,<5"
pkg-config = ">=0.29.2,<0.30"

[target.linux-64.dependencies]
sysroot_linux-64 = ">=2.28"
ocl-icd = ">=2.3.2,<3"
ocl-icd-system = ">=1.0.0,<2"
clinfo = ">=3.0.21.2.21,<4"
intel-opencl-fpga-emu-rt = ">=2024.2.1,<2025"
wget = ">=1.21.4,<2"
cuda = ">=12.6.2,<13"
pthread-stubs = ">=0.4,<0.5"

[target.linux-64.activation]
scripts = ["activation/linux.sh"]

# [target.win-64.activation]
# scripts = ["activation/msvc.bat"]


# CLANG Toolchain
[feature.clang.dependencies]
clangdev = ">=18,<19"

[feature.clang.target.linux-64.dependencies]
clangxx_linux-64 = ">=18,<19"
clang_linux-64 = ">=18,<19"

# [feature.clang.target.win-64.dependencies]
# vs_win-64 = ">=2022.11,<2023"

[feature.clang.target.linux-64.activation]
scripts = ["activation/clang.sh"]

# [feature.clang.target.win-64.activation]
# scripts = ["activation/clang.bat"]


# Post-DPCPP Build
[feature.onemkl.dependencies]
clangdev = ">=18,<19"

[feature.onemkl.target.linux-64.dependencies]
clangxx_linux-64 = ">=18,<19"
clang_linux-64 = ">=18,<19"

[feature.onemkl.target.linux-64.activation]
scripts = ["activation/dpcpp.sh"]


# ENVIRONMENTS
[environments]
dpcpp-build = ["clang", "dpcpp"]
onemkl-build = ["onemkl"]


[feature.dpcpp.tasks]
setup = "bash recipes/dpcpp/scripts/setup.sh"
configure = { cmd = "bash recipes/dpcpp/scripts/configure.sh", depends-on = [
  "setup",
] }
build = { cmd = "bash recipes/dpcpp/scripts/build.sh", depends-on = [
  "configure",
] }
install = { cmd = "bash recipes/dpcpp/scripts/install.sh", depends-on = [
  "build",
] }


[feature.onemkl.tasks]
link-presets = { cmd = "ln -sf $PIXI_PROJECT_ROOT/CMakePresets.json $PIXI_PROJECT_ROOT/onemkl/CMakePresets.json", outputs = [
  "onemkl/CMakePresets.json",
] }
configure = { cmd = "cmake onemkl --preset onemkl-build-linux", depends-on = [
  "link-presets",
] }
build = { cmd = "cmake --build onemkl/build", depends-on = ["configure"] }
install = { cmd = "cmake --install onemkl/build", depends-on = ["build"] }
